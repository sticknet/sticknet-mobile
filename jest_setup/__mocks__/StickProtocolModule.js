import {NativeModules} from 'react-native';

NativeModules.StickProtocolModule = {
    getStickId: jest.fn(),
    decryptPreKeys: () => Promise.resolve(),
    reInitialize: () => Promise.resolve(),
    decryptDSKs: jest.fn(),
    generatePreKeys: jest.fn(),
    initPairwiseSession: jest.fn(),
    encryptTextPairwise: jest.fn(),
    decryptTextPairwise: jest.fn(),
    decryptFilePairwise: jest.fn(),
    encryptFilePairwise: jest.fn(() => Promise.resolve({uri: 'uri', cipher: 'cipher'})),
    encryptText: jest.fn(),
    encryptTextVault: jest.fn(),
    decryptText: jest.fn(() => Promise.resolve('decrypted text')),
    decryptTextVault: jest.fn(),
    encryptFile: jest.fn(() => Promise.resolve({uri: 'uri', cipher: 'cipher'})),
    decryptFile: jest.fn(() => Promise.resolve('decrypted_uri')),
    decryptFileVault: jest.fn(() => Promise.resolve('decrypted_uri')),
    getSenderKey: jest.fn(),
    createStickySession: jest.fn(),
    sessionExists: jest.fn(),
    pairwiseSessionExists: jest.fn(),
    initStickySession: jest.fn(),
    initStandardGroupSession: jest.fn(),
    reinitMyStickySession: jest.fn(),
    checkRegistration: jest.fn(),
    resetDatabase: jest.fn(),
    getChainStep: jest.fn(),
    ratchetChain: jest.fn(),
    refreshSignedPreKey: jest.fn(),
    refreshIdentityKey: jest.fn(),
    createPasswordHash: () => Promise.resolve(),
    createNewPasswordHash: jest.fn(),
    recoverPassword: jest.fn(),
    initialize: jest.fn(),
    reEncryptKey: jest.fn(),
    encryptFileVault: jest.fn(() => Promise.resolve({uri: 'uri', cipher: 'cipher'})),
};
